1 class
1 IDENTIFIER Program
2 {
3 int
3 IDENTIFIER gurp
3 (
3 int
3 IDENTIFIER a
3 ,
3 int
3 IDENTIFIER b
3 ,
3 boolean
3 IDENTIFIER c
3 ,
3 int
3 IDENTIFIER d
3 ,
3 int
3 IDENTIFIER e
3 ,
3 int
3 IDENTIFIER f
3 ,
3 boolean
3 IDENTIFIER g
3 ,
3 int
3 IDENTIFIER h
3 )
4 {
5 int
5 IDENTIFIER i
5 ,
5 IDENTIFIER j
5 ,
5 IDENTIFIER k
5 ,
5 IDENTIFIER l
5 ,
5 IDENTIFIER m
5 ,
5 IDENTIFIER n
5 ,
5 IDENTIFIER o
5 ,
5 IDENTIFIER p
5 ,
5 IDENTIFIER q
5 ,
5 IDENTIFIER r
5 ,
5 IDENTIFIER s
5 ,
5 IDENTIFIER t
5 ,
5 IDENTIFIER u
5 ,
5 IDENTIFIER v
5 ,
5 IDENTIFIER w
5 ,
5 IDENTIFIER x
5 ,
5 IDENTIFIER y
5 ,
5 IDENTIFIER z
5 ,
5 IDENTIFIER a1
5 ,
5 IDENTIFIER a2
5 ,
5 IDENTIFIER a3
5 ,
5 IDENTIFIER a4
5 ;
7 callout
7 (
7 STRINGLITERAL "printf"
7 ,
7 STRINGLITERAL "top of gurp\n"
7 )
7 ;
8 IDENTIFIER j
8 =
8 IDENTIFIER a
8 *
8 IDENTIFIER b
8 -
8 IDENTIFIER e
8 +
8 IDENTIFIER d
8 ;
9 callout
9 (
9 STRINGLITERAL "printf"
9 ,
9 STRINGLITERAL "done j\n"
9 )
9 ;
10 IDENTIFIER i
10 =
10 IDENTIFIER j
10 -
10 INTLITERAL 1
10 ;
11 callout
11 (
11 STRINGLITERAL "printf"
11 ,
11 STRINGLITERAL "done i\n"
11 )
11 ;
12 IDENTIFIER j
12 =
12 INTLITERAL 3
12 +
12 IDENTIFIER i
12 ;
13 callout
13 (
13 STRINGLITERAL "printf"
13 ,
13 STRINGLITERAL "done j\n"
13 )
13 ;
14 IDENTIFIER k
14 =
14 IDENTIFIER i
14 +
14 IDENTIFIER j
14 -
14 INTLITERAL 2
14 ;
15 callout
15 (
15 STRINGLITERAL "printf"
15 ,
15 STRINGLITERAL "done k\n"
15 )
15 ;
16 IDENTIFIER l
16 =
16 IDENTIFIER k
16 -
16 IDENTIFIER j
16 ;
17 callout
17 (
17 STRINGLITERAL "printf"
17 ,
17 STRINGLITERAL "done k\n"
17 )
17 ;
18 IDENTIFIER m
18 =
18 IDENTIFIER i
18 +
18 IDENTIFIER k
18 ;
19 callout
19 (
19 STRINGLITERAL "printf"
19 ,
19 STRINGLITERAL "done m\n%d %d\n"
19 ,
19 IDENTIFIER k
19 ,
19 IDENTIFIER m
19 )
19 ;
20 IDENTIFIER n
20 =
20 IDENTIFIER i
20 +
20 (
20 IDENTIFIER j
20 -
20 (
20 IDENTIFIER k
20 -
20 IDENTIFIER m
20 )
20 )
20 ;
21 callout
21 (
21 STRINGLITERAL "printf"
21 ,
21 STRINGLITERAL "after n\n"
21 )
21 ;
22 if
22 (
22 IDENTIFIER a
22 >
22 INTLITERAL 50
22 )
23 {
24 IDENTIFIER o
24 =
24 IDENTIFIER a
24 +
24 IDENTIFIER b
24 +
24 IDENTIFIER l
24 ;
25 IDENTIFIER j
25 =
25 IDENTIFIER l
25 -
25 IDENTIFIER m
25 ;
26 if
26 (
26 IDENTIFIER c
26 )
27 {
28 IDENTIFIER l
28 =
28 IDENTIFIER e
28 +
28 IDENTIFIER f
28 -
28 (
28 IDENTIFIER h
28 +
28 IDENTIFIER n
28 )
28 ;
29 IDENTIFIER f
29 =
29 IDENTIFIER f
29 -
29 INTLITERAL 1
29 ;
30 IDENTIFIER q
30 =
30 IDENTIFIER o
30 -
30 INTLITERAL 3
30 ;
31 }
32 else
33 {
34 IDENTIFIER q
34 =
34 IDENTIFIER o
34 +
34 INTLITERAL 3
34 ;
35 }
36 if
36 (
36 IDENTIFIER c
36 ||
36 IDENTIFIER g
36 )
37 {
38 IDENTIFIER s
38 =
38 IDENTIFIER f
38 +
38 IDENTIFIER e
38 +
38 (
38 IDENTIFIER h
38 -
38 IDENTIFIER b
38 )
38 ;
39 }
40 }
41 else
42 {
43 IDENTIFIER o
43 =
43 IDENTIFIER b
43 -
43 IDENTIFIER a
43 ;
44 IDENTIFIER j
44 =
44 IDENTIFIER l
44 +
44 IDENTIFIER m
44 ;
45 if
45 (
45 IDENTIFIER g
45 )
46 {
47 IDENTIFIER f
47 =
47 INTLITERAL 3
47 +
47 (
47 IDENTIFIER a
47 -
47 IDENTIFIER o
47 )
47 ;
48 IDENTIFIER q
48 =
48 INTLITERAL 3
48 -
48 IDENTIFIER o
48 ;
49 IDENTIFIER s
49 =
49 IDENTIFIER f
49 +
49 IDENTIFIER q
49 ;
50 }
51 else
52 {
53 IDENTIFIER s
53 =
53 INTLITERAL 3
53 +
53 (
53 IDENTIFIER o
53 -
53 IDENTIFIER a
53 -
53 INTLITERAL 2
53 )
53 ;
54 IDENTIFIER q
54 =
54 IDENTIFIER s
54 +
54 IDENTIFIER j
54 ;
55 IDENTIFIER f
55 =
55 IDENTIFIER s
55 +
55 IDENTIFIER q
55 -
55 IDENTIFIER q
55 ;
56 }
57 }
58 callout
58 (
58 STRINGLITERAL "printf"
58 ,
58 STRINGLITERAL "after first if\n"
58 )
58 ;
59 IDENTIFIER t
59 =
59 IDENTIFIER e
59 +
59 IDENTIFIER l
59 -
59 IDENTIFIER i
59 ;
60 IDENTIFIER a1
60 =
60 IDENTIFIER t
60 +
60 IDENTIFIER j
60 +
60 IDENTIFIER o
60 ;
61 IDENTIFIER r
61 =
61 IDENTIFIER t
61 -
61 IDENTIFIER a1
61 +
61 IDENTIFIER m
61 -
61 IDENTIFIER j
61 ;
62 IDENTIFIER v
62 =
62 IDENTIFIER l
62 +
62 IDENTIFIER a1
62 +
62 (
62 IDENTIFIER t
62 -
62 (
62 IDENTIFIER q
62 +
62 IDENTIFIER f
62 )
62 )
62 ;
63 if
63 (
63 IDENTIFIER g
63 )
64 {
65 IDENTIFIER w
65 =
65 INTLITERAL 3
65 ;
66 }
67 else
68 {
69 IDENTIFIER w
69 =
69 -
69 INTLITERAL 1
69 ;
70 }
71 callout
71 (
71 STRINGLITERAL "printf"
71 ,
71 STRINGLITERAL "after second if\n"
71 )
71 ;
72 IDENTIFIER u
72 =
72 INTLITERAL 99
72 +
72 IDENTIFIER n
72 -
72 IDENTIFIER e
72 +
72 IDENTIFIER t
72 ;
73 IDENTIFIER y
73 =
73 IDENTIFIER e
73 -
73 IDENTIFIER s
73 +
73 IDENTIFIER n
73 +
73 IDENTIFIER o
73 +
73 IDENTIFIER m
73 -
73 IDENTIFIER e
73 +
73 IDENTIFIER b
73 -
73 IDENTIFIER b
73 +
73 IDENTIFIER e
73 ;
74 IDENTIFIER a2
74 =
74 IDENTIFIER a1
74 +
74 IDENTIFIER t
74 -
74 IDENTIFIER n
74 -
74 IDENTIFIER t
74 ;
75 IDENTIFIER a4
75 =
75 IDENTIFIER h
75 +
75 IDENTIFIER f
75 +
75 IDENTIFIER d
75 -
75 IDENTIFIER e
75 ;
76 if
76 (
76 IDENTIFIER w
76 ==
76 -
76 INTLITERAL 1
76 )
77 {
78 IDENTIFIER a3
78 =
78 IDENTIFIER a2
78 +
78 IDENTIFIER a4
78 ;
79 }
80 else
81 {
82 IDENTIFIER a3
82 =
82 IDENTIFIER a4
82 -
82 IDENTIFIER a2
82 ;
83 }
84 IDENTIFIER z
84 =
84 IDENTIFIER u
84 -
84 IDENTIFIER v
84 +
84 IDENTIFIER w
84 ;
85 IDENTIFIER p
85 =
85 INTLITERAL 42
85 -
85 IDENTIFIER z
85 ;
87 callout
87 (
87 STRINGLITERAL "printf"
87 ,
87 STRINGLITERAL "after third if\n"
87 )
87 ;
88 callout
88 (
88 STRINGLITERAL "printf"
88 ,
88 STRINGLITERAL "%d"
88 ,
88 IDENTIFIER a
88 -
88 IDENTIFIER i
88 +
88 IDENTIFIER d
88 +
88 IDENTIFIER j
88 -
88 IDENTIFIER e
88 -
88 IDENTIFIER f
88 +
88 IDENTIFIER l
88 +
88 IDENTIFIER m
88 )
88 ;
89 callout
89 (
89 STRINGLITERAL "printf"
89 ,
89 STRINGLITERAL " "
89 )
89 ;
90 callout
90 (
90 STRINGLITERAL "printf"
90 ,
90 STRINGLITERAL "%d"
90 ,
90 IDENTIFIER b
90 -
90 IDENTIFIER k
90 -
90 IDENTIFIER h
90 +
90 IDENTIFIER n
90 +
90 IDENTIFIER o
90 +
90 IDENTIFIER q
90 -
90 IDENTIFIER r
90 -
90 IDENTIFIER a2
90 )
90 ;
91 callout
91 (
91 STRINGLITERAL "printf"
91 ,
91 STRINGLITERAL " "
91 )
91 ;
92 callout
92 (
92 STRINGLITERAL "printf"
92 ,
92 STRINGLITERAL "%d"
92 ,
92 IDENTIFIER a4
92 +
92 IDENTIFIER s
92 -
92 IDENTIFIER t
92 +
92 IDENTIFIER z
92 -
92 IDENTIFIER y
92 +
92 IDENTIFIER x
92 +
92 IDENTIFIER w
92 -
92 IDENTIFIER a3
92 )
92 ;
93 callout
93 (
93 STRINGLITERAL "printf"
93 ,
93 STRINGLITERAL " "
93 )
93 ;
94 if
94 (
94 IDENTIFIER c
94 )
95 {
96 callout
96 (
96 STRINGLITERAL "printf"
96 ,
96 STRINGLITERAL "%d"
96 ,
96 IDENTIFIER p
96 +
96 IDENTIFIER u
96 -
96 IDENTIFIER v
96 +
96 IDENTIFIER a1
96 )
96 ;
97 }
98 else
99 {
100 if
100 (
100 IDENTIFIER g
100 )
101 {
102 callout
102 (
102 STRINGLITERAL "printf"
102 ,
102 STRINGLITERAL "%d"
102 ,
102 IDENTIFIER u
102 -
102 IDENTIFIER v
102 +
102 IDENTIFIER a1
102 -
102 IDENTIFIER p
102 )
102 ;
103 }
104 else
105 {
106 callout
106 (
106 STRINGLITERAL "printf"
106 ,
106 STRINGLITERAL "%d"
106 ,
106 IDENTIFIER a1
106 +
106 IDENTIFIER v
106 +
106 IDENTIFIER p
106 -
106 IDENTIFIER u
106 )
106 ;
107 }
108 }
109 callout
109 (
109 STRINGLITERAL "printf"
109 ,
109 STRINGLITERAL "after fourth if\n"
109 )
109 ;
110 return
110 IDENTIFIER a
110 -
110 IDENTIFIER b
110 +
110 IDENTIFIER d
110 +
110 IDENTIFIER e
110 +
110 IDENTIFIER f
110 +
110 IDENTIFIER h
110 +
110 IDENTIFIER i
110 +
110 IDENTIFIER j
110 +
110 IDENTIFIER k
110 +
110 IDENTIFIER l
110 +
110 IDENTIFIER m
110 -
110 IDENTIFIER n
110 +
110 IDENTIFIER o
110 -
110 IDENTIFIER p
110 +
110 IDENTIFIER q
111 -
111 IDENTIFIER r
111 +
111 IDENTIFIER s
111 -
111 IDENTIFIER t
111 +
111 IDENTIFIER u
111 -
111 IDENTIFIER v
111 +
111 IDENTIFIER w
111 -
111 IDENTIFIER x
111 +
111 IDENTIFIER y
111 -
111 IDENTIFIER z
111 +
111 IDENTIFIER a1
111 +
111 IDENTIFIER a2
111 +
111 IDENTIFIER a3
111 -
111 IDENTIFIER a4
111 ;
112 }
115 void
115 IDENTIFIER main
115 (
115 )
116 {
117 int
117 IDENTIFIER y
117 ,
117 IDENTIFIER z
117 ,
117 IDENTIFIER a
117 ,
117 IDENTIFIER b
117 ;
118 int
118 IDENTIFIER x
118 ;
119 for
119 IDENTIFIER x
119 =
119 INTLITERAL 3
119 ,
119 INTLITERAL 5
120 {
121 callout
121 (
121 STRINGLITERAL "printf"
121 ,
121 STRINGLITERAL "Top of loop\n"
121 )
121 ;
122 IDENTIFIER z
122 =
122 IDENTIFIER gurp
122 (
122 INTLITERAL 1
122 +
122 IDENTIFIER x
122 ,
122 INTLITERAL 0
122 -
122 IDENTIFIER x
122 ,
122 BOOLEANLITERAL true
122 ,
122 INTLITERAL 3
122 ,
122 INTLITERAL 2
122 +
122 IDENTIFIER x
122 ,
122 INTLITERAL 1
122 -
122 IDENTIFIER x
122 ,
122 BOOLEANLITERAL true
122 ,
122 INTLITERAL 4
122 -
122 IDENTIFIER x
122 )
122 ;
123 callout
123 (
123 STRINGLITERAL "printf"
123 ,
123 STRINGLITERAL "done z gurp\n"
123 )
123 ;
124 callout
124 (
124 STRINGLITERAL "printf"
124 ,
124 STRINGLITERAL "%d"
124 ,
124 IDENTIFIER x
124 )
124 ;
125 callout
125 (
125 STRINGLITERAL "printf"
125 ,
125 STRINGLITERAL "\n"
125 )
125 ;
126 IDENTIFIER z
126 =
126 IDENTIFIER gurp
126 (
126 INTLITERAL 1
126 +
126 IDENTIFIER x
126 ,
126 INTLITERAL 0
126 -
126 IDENTIFIER x
126 ,
126 BOOLEANLITERAL true
126 ,
126 INTLITERAL 3
126 ,
126 INTLITERAL 2
126 +
126 IDENTIFIER x
126 ,
126 IDENTIFIER x
126 +
126 INTLITERAL 1
126 ,
126 BOOLEANLITERAL true
126 ,
126 INTLITERAL 0
126 )
126 ;
127 callout
127 (
127 STRINGLITERAL "printf"
127 ,
127 STRINGLITERAL "done 0z gurp\n"
127 )
127 ;
128 IDENTIFIER y
128 =
128 IDENTIFIER gurp
128 (
128 INTLITERAL 3
128 -
128 IDENTIFIER x
128 ,
128 -
128 INTLITERAL 8
128 +
128 IDENTIFIER x
128 ,
128 BOOLEANLITERAL false
128 ,
128 INTLITERAL 12
128 -
128 INTLITERAL 3
128 *
128 IDENTIFIER x
128 ,
128 INTLITERAL 16
128 +
128 IDENTIFIER x
128 ,
128 INTLITERAL 1
128 ,
128 BOOLEANLITERAL true
128 ,
128 INTLITERAL 8
128 -
128 IDENTIFIER x
128 )
128 ;
129 callout
129 (
129 STRINGLITERAL "printf"
129 ,
129 STRINGLITERAL "done y gurp\n"
129 )
129 ;
130 IDENTIFIER a
130 =
130 IDENTIFIER gurp
130 (
130 INTLITERAL 2
130 -
130 IDENTIFIER x
130 ,
130 INTLITERAL 6
130 +
130 IDENTIFIER x
130 ,
130 BOOLEANLITERAL false
130 ,
130 IDENTIFIER x
130 *
130 -
130 INTLITERAL 3
130 ,
130 INTLITERAL 1
130 ,
130 INTLITERAL 3
130 -
130 IDENTIFIER x
130 *
130 INTLITERAL 2
130 ,
130 BOOLEANLITERAL false
130 ,
130 INTLITERAL 5
130 -
130 IDENTIFIER x
130 )
130 ;
131 callout
131 (
131 STRINGLITERAL "printf"
131 ,
131 STRINGLITERAL "done a gurp\n"
131 )
131 ;
132 IDENTIFIER b
132 =
132 IDENTIFIER gurp
132 (
132 -
132 INTLITERAL 3
132 ,
132 INTLITERAL 8
132 ,
132 BOOLEANLITERAL true
132 ,
132 INTLITERAL 7
132 -
132 IDENTIFIER x
132 ,
132 IDENTIFIER x
132 -
132 INTLITERAL 4
132 ,
132 INTLITERAL 2
132 ,
132 BOOLEANLITERAL false
132 ,
132 INTLITERAL 6
132 -
132 IDENTIFIER x
132 *
132 INTLITERAL 9
132 )
132 ;
133 callout
133 (
133 STRINGLITERAL "printf"
133 ,
133 STRINGLITERAL "done b gurp\n"
133 )
133 ;
134 callout
134 (
134 STRINGLITERAL "printf"
134 ,
134 STRINGLITERAL "After gurps\n"
134 )
134 ;
135 callout
135 (
135 STRINGLITERAL "printf"
135 ,
135 STRINGLITERAL "%d"
135 ,
135 IDENTIFIER y
135 )
135 ;
136 callout
136 (
136 STRINGLITERAL "printf"
136 ,
136 STRINGLITERAL " "
136 )
136 ;
137 callout
137 (
137 STRINGLITERAL "printf"
137 ,
137 STRINGLITERAL "%d"
137 ,
137 IDENTIFIER z
137 )
137 ;
138 callout
138 (
138 STRINGLITERAL "printf"
138 ,
138 STRINGLITERAL " "
138 )
138 ;
139 callout
139 (
139 STRINGLITERAL "printf"
139 ,
139 STRINGLITERAL "%d"
139 ,
139 IDENTIFIER a
139 )
139 ;
140 callout
140 (
140 STRINGLITERAL "printf"
140 ,
140 STRINGLITERAL " "
140 )
140 ;
141 callout
141 (
141 STRINGLITERAL "printf"
141 ,
141 STRINGLITERAL "%d"
141 ,
141 IDENTIFIER b
141 )
141 ;
142 callout
142 (
142 STRINGLITERAL "printf"
142 ,
142 STRINGLITERAL "\n"
142 )
142 ;
143 }
144 }
145 }
